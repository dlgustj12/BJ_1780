#include <stdio.h>
#include <stdlib.h>

int** arr;
int cnt[3];

//전체가 같은지 판별
bool isSame(int xs, int ys, int size) {

	int temp = arr[xs][ys];

	for (int i = 0; i < size; i++) {
		for (int j = 0; j < size; j++) {
			if (arr[xs + i][ys + j] != temp)
				return false;
		}
	}
	return true;
}

// 숫자 체크해서 변환
int whatNum(int x,int y ) {
	switch (arr[x][y]) {
	case -1:
		return 0;
	case 0:
		return 1;
	case 1:
		return 2;
	default:
		printf("whatNum Error\n"); // 혹시 모르니까
		return -1;
	}
}

void dnc(int xs, int ys, int n) {
	
	if (isSame(xs, ys, n)) {
		cnt[whatNum(xs,ys)]++;
		return;
	}

	int size = n  / 3;
	//9등분 해야됨
	for (int i = 0; i < 3; i++) {
		for (int j = 0; j < 3; j++) {
			dnc(xs + i * size, ys + j * size, size);
		}
	}
}

int main(void) {

	int n;
	scanf("%d", &n);

	arr = (int**)malloc(sizeof(int*) * n);
	if (arr == NULL) {
		printf("Failed to 동적할당\n");
		return 1;
	}
	int i, j;
	
	for (i = 0; i < n; i++) {
		arr[i] = (int*)malloc(sizeof(int) * n);
		if (arr == NULL) {
			printf("Failed to 동적할당\n");
			return 1;
		}
		for (j = 0; j < n; j++) {
			scanf("%d", &arr[i][j]);
		}
	}

	dnc(0,0, n);

	for (i = 0; i < 3; i++) {
		printf("%d\n", cnt[i]);
	}

	for (int i = 0; i < n; i++) {
		free(arr[i]);
	}
	free(arr);

	return 0;
}
